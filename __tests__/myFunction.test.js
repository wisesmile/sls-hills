"use strict";

// tests for myFunction
// Generated by serverless-jest-plugin

const mod = require("./../src/myFunction/index");
const jestPlugin = require("serverless-jest-plugin");
const lambdaWrapper = jestPlugin.lambdaWrapper;
const wrapped = lambdaWrapper.wrap(mod, { handler: "handler" });

describe("myFunction", () => {
  beforeAll((done) => {
    //  lambdaWrapper.init(liveFunction); // Run the deployed lambda
    done();
  });

  it("expects a response to be defined", () => {
    return wrapped.run({}).then((response) => {
      expect(response).toBeDefined();
    });
  });

  it("expects a server response of 200", () => {
    return wrapped.run({}).then((response) => {
      expect(response.statusCode).toBe(200);
    });
  });

  it("expects a body", () => {
    return wrapped.run({}).then((response) => {
      expect(response.body).toBe(
        `{"message":"Go Serverless v1.0! Your function executed successfully!","input":{}}`
      );
    });
  });

  it("expects a message", () => {
    return wrapped.run({}).then((response) => {
      expect(response.statusCode).toBe(200);
      const body = JSON.parse(response.body);
      expect(body.message).toBe(
        "Go Serverless v1.0! Your function executed successfully!"
      );
    });
  });

  it("displays data from console log", () => {
    return wrapped.run({}).then((response) => {
      console.log("response", response);
      console.log("response.body", response.body);
      console.log("response.http code", response.statusCode);
      const body = JSON.parse(response.body);
      console.log("json parse body", body);
      expect(response.statusCode).toBe(200);
    });
  });
});
